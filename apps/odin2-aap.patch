Only in ../../apps/odin2: aap_metadata.xml
Only in ../../apps/odin2: android-audio-plugin-framework
Only in ../../apps/odin2: Builds
Only in .: .git
Only in .: .github
Only in .: .gitignore
Only in ../../apps/odin2: JuceLibraryCode
Only in ../../apps/odin2: juce-modules
Only in ../../apps/odin2: modules
Only in ../../apps/odin2: Odin2.jucer
diff -urZ ./Source/audio/Oscillators/Wavetables/Tables/WavetableData.cpp ../../apps/odin2/Source/audio/Oscillators/Wavetables/Tables/WavetableData.cpp
--- ./Source/audio/Oscillators/Wavetables/Tables/WavetableData.cpp	2021-01-13 18:40:10.913862291 +0900
+++ ../../apps/odin2/Source/audio/Oscillators/Wavetables/Tables/WavetableData.cpp	2021-01-14 02:24:09.900856072 +0900
@@ -15,6 +15,9 @@
 
 #include "WavetableData.h"
 
+#pragma clang diagnostic push
+#pragma clang diagnostic ignored "-Wimplicit-float-conversion"
+
 const float wavetable_data[NUMBER_OF_WAVETABLES][SUBTABLES_PER_WAVETABLE][WAVETABLE_LENGTH] = {
     {{0,          0.0122715,  0.0245412,  0.0368072,  0.0490677,   0.0613207,  0.0735646,  0.0857973,  0.0980171,
       0.110222,   0.122411,   0.134581,   0.14673,    0.158858,    0.170962,   0.18304,    0.19509,    0.207111,
@@ -409997,3 +410000,5 @@
 const float *getOneSubTable(int p_wavetable, int p_subtable) {
 	return wavetable_data[p_wavetable][p_subtable];
 }
\ No newline at end of file
+
+#pragma clang diagnostic pop
Only in ../../apps/odin2/Source: GitCommitId.h
diff -urZ ./Source/gui/BrowserEntry.cpp ../../apps/odin2/Source/gui/BrowserEntry.cpp
--- ./Source/gui/BrowserEntry.cpp	2021-01-13 18:40:10.925862117 +0900
+++ ../../apps/odin2/Source/gui/BrowserEntry.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -33,7 +33,7 @@
 	}
 	m_rename_editor.onReturnKey = [&]() {
 		if (m_rename_editor.getText().isEmpty()) {
-			AlertWindow::showMessageBox(
+			AlertWindow::showMessageBoxAsync(
 			    AlertWindow::AlertIconType::WarningIcon, "Empty Name", "Please input a valid name!", "Ok");
 			return;
 		}
diff -urZ ./Source/gui/DrawableSlider.cpp ../../apps/odin2/Source/gui/DrawableSlider.cpp
--- ./Source/gui/DrawableSlider.cpp	2021-01-13 18:40:10.925862117 +0900
+++ ../../apps/odin2/Source/gui/DrawableSlider.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -68,6 +68,8 @@
 	if (event.mods.isRightButtonDown() && m_midi_learn_possible) {
 		//DBG("RIGHT");
 		PopupMenu midi_learn_menu;
+		Logger::writeToLog("Menu popup not implemented on Android");
+		/*
 		if (m_midi_learn) {
 			midi_learn_menu.addItem(2, "Stop MIDI learn");
 			if (midi_learn_menu.show() == 2) {
@@ -94,6 +96,7 @@
 				repaint();
 			}
 		}
+		*/
 		return;
 	}
 	Slider::mouseDown(event);
diff -urZ ./Source/gui/Knob.cpp ../../apps/odin2/Source/gui/Knob.cpp
--- ./Source/gui/Knob.cpp	2021-01-13 18:40:10.929862060 +0900
+++ ../../apps/odin2/Source/gui/Knob.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -25,6 +25,8 @@
 	if (event.mods.isRightButtonDown() && m_midi_learn_possible) {
 		//DBG("RIGHT");
 		PopupMenu midi_learn_menu;
+		Logger::writeToLog("Menu popup not implemented on Android");
+		/*
 		if (m_midi_learn) {
 			midi_learn_menu.addItem(2, "Stop MIDI learn");
 			if (midi_learn_menu.show() == 2) {
@@ -51,6 +53,7 @@
 				repaint();
 			}
 		}
+		*/
 		return;
 	}
 	Slider::mouseDown(event);
diff -urZ ./Source/gui/LeftRightButton.cpp ../../apps/odin2/Source/gui/LeftRightButton.cpp
--- ./Source/gui/LeftRightButton.cpp	2021-01-13 18:40:10.933862002 +0900
+++ ../../apps/odin2/Source/gui/LeftRightButton.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -60,6 +60,8 @@
 
 		//DBG("RIGHT");
 		PopupMenu midi_learn_menu;
+		Logger::writeToLog("Menu popup not implemented on Android");
+		/*
 		if (m_midi_learn) {
 			midi_learn_menu.addItem(2, "Stop MIDI learn");
 			if (midi_learn_menu.show() == 2) {
@@ -86,6 +88,7 @@
 				repaint();
 			}
 		}
+		*/
 		return;
 	}
 	juce::Point<int> mouse_position = getMouseXYRelative();
diff -urZ ./Source/gui/NumberSelectorWithText.cpp ../../apps/odin2/Source/gui/NumberSelectorWithText.cpp
--- ./Source/gui/NumberSelectorWithText.cpp	2021-01-13 18:40:10.937861944 +0900
+++ ../../apps/odin2/Source/gui/NumberSelectorWithText.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -49,11 +49,15 @@
 			// b) make ordering inside menu the same as up/down buttons
 			m_dropdown.addItem(9999 - m_legal_values[index], valueToText(m_legal_values[index]));
 		}
-		int selected = 9999 - m_dropdown.show();
-		if (selected != 9999) {
-			DBG(selected);
-			setValue(selected);
-		}
+		PopupMenu::Options options{};
+		std::function<void(int)> cb = [&](int v) {
+			int selected = 9999 - v;
+			if (selected != 9999) {
+				DBG(selected);
+				setValue(selected);
+			}
+		};
+		m_dropdown.showMenuAsync(options, cb);
 	};
 
 	addAndMakeVisible(m_display);
diff -urZ ./Source/gui/OdinButton.cpp ../../apps/odin2/Source/gui/OdinButton.cpp
--- ./Source/gui/OdinButton.cpp	2021-01-13 18:40:10.937861944 +0900
+++ ../../apps/odin2/Source/gui/OdinButton.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -21,6 +21,8 @@
 void OdinButton::mouseDown(const MouseEvent &event) {
 	if (event.mods.isRightButtonDown() && m_midi_learn_possible) {
 		//DBG("RIGHT");
+		Logger::writeToLog("MIDI learn popup menu not implemented on Android");
+		/*
 		PopupMenu midi_learn_menu;
 		if (m_midi_learn) {
 			midi_learn_menu.addItem(2, "Stop MIDI learn");
@@ -48,6 +50,7 @@
 				repaint();
 			}
 		}
+		*/
 		return;
 	}
 	DrawableButton::mouseDown(event);
diff -urZ ./Source/gui/PatchBrowser.cpp ../../apps/odin2/Source/gui/PatchBrowser.cpp
--- ./Source/gui/PatchBrowser.cpp	2021-01-13 23:20:18.334854101 +0900
+++ ../../apps/odin2/Source/gui/PatchBrowser.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -71,13 +71,13 @@
 		DBG("DELETE directory: " + m_soundbank_selector.getDirectory() + File::getSeparatorString() + p_string);
 		String absolute_path = m_soundbank_selector.getDirectory() + File::getSeparatorString() + p_string;
 
-		if (AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+		if (true/*AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 		                                 "Delete Category",
 		                                 "Are you sure you want to delete the Soundbank " + p_string +
 		                                     " and ALL the presets in it?",
 		                                 {},
 		                                 {},
-		                                 {})) {
+		                                 {})*/) {
 			File file_to_delete(absolute_path);
 			if (file_to_delete.deleteRecursively()) {
 				DBG("Directory was deleted!");
@@ -101,13 +101,13 @@
 		DBG("DELETE directory: " + m_category_selector.getDirectory() + File::getSeparatorString() + p_string);
 		String absolute_path = m_category_selector.getDirectory() + File::getSeparatorString() + p_string;
 
-		if (AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+		if (true/*AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 		                                 "Delete Category",
 		                                 "Are you sure you want to delete the category " + p_string +
 		                                     " and ALL the presets in it?",
 		                                 {},
 		                                 {},
-		                                 {})) {
+		                                 {})*/) {
 			File file_to_delete(absolute_path);
 			if (file_to_delete.deleteRecursively()) {
 				DBG("DBG: Directory was deleted!");
@@ -128,12 +128,12 @@
 		DBG("DELETE patch: " + m_patch_selector.getDirectory() + File::getSeparatorString() + p_string);
 		String absolute_path = m_patch_selector.getDirectory() + File::getSeparatorString() + p_string;
 
-		if (AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+		if (true/*AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 		                                 "Delete Preset",
 		                                 "Are you sure you want to delete preset " + p_string + "?",
 		                                 {},
 		                                 {},
-		                                 {})) {
+		                                 {})*/) {
 			File file_to_delete(absolute_path);
 			if (file_to_delete.deleteFile()) {
 				DBG("file was deleted!");
@@ -155,12 +155,12 @@
 
 		//check whether file already exists
 		if (file_to_write.existsAsFile()) {
-			if (!(AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+			if (true/*!(AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 			                                   "Preset already exists!",
 			                                   "Are you sure you want to overwrite it?",
 			                                   {},
 			                                   {},
-			                                   {}))) {
+			                                   {}))*/) {
 				//user selected cancel
 				return;
 			}
@@ -181,7 +181,7 @@
 
 		//check whether directory already exists
 		if (dir_to_create.isDirectory()) {
-			AlertWindow::showMessageBox(AlertWindow::AlertIconType::WarningIcon,
+			AlertWindow::showMessageBoxAsync(AlertWindow::AlertIconType::WarningIcon,
 			                            "Category Exists!",
 			                            "The category you're trying to create already exists!",
 			                            "Ok");
@@ -202,7 +202,7 @@
 
 		//check whether directory already exists
 		if (dir_to_create.isDirectory()) {
-			AlertWindow::showMessageBox(AlertWindow::AlertIconType::WarningIcon,
+			AlertWindow::showMessageBoxAsync(AlertWindow::AlertIconType::WarningIcon,
 			                            "Soundbank Exists!",
 			                            "The soundbank you're trying to create already exists!",
 			                            "Ok");
@@ -247,12 +247,12 @@
 
 				    //check whether file already exists
 				    if (file_to_write.existsAsFile()) {
-					    if (!(AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+					    if (!(true/*AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 					                                       "File already exists!",
 					                                       "Are you sure you want to overwrite it?",
 					                                       {},
 					                                       {},
-					                                       {}))) {
+					                                       {})*/)) {
 						    //user selected cancel
 						    return;
 					    }
@@ -271,7 +271,7 @@
 	m_soundbank_selector.onExport = [&](String p_directory) {
 		File soundbank_file(m_category_selector.getDirectory());
 		if (!soundbank_file.isDirectory()) {
-			AlertWindow::showMessageBox(AlertWindow::AlertIconType::WarningIcon,
+			AlertWindow::showMessageBoxAsync(AlertWindow::AlertIconType::WarningIcon,
 			                            "No soundbank selected!",
 			                            "You appear to not have selected any soundbank.",
 			                            "Bummer");
@@ -299,12 +299,12 @@
 
 				    //check whether file already exists
 				    if (file_to_write.existsAsFile()) {
-					    if (!(AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+					    if (!(true/*AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 					                                       "File already exists!",
 					                                       "Are you sure you want to overwrite it?",
 					                                       {},
 					                                       {},
-					                                       {}))) {
+					                                       {})*/)) {
 						    //user selected cancel
 						    return;
 					    }
@@ -355,7 +355,7 @@
 
 		File move_target(p_directory + File::getSeparatorString() + p_new_name + ".odin");
 		if (move_target.existsAsFile()) {
-			AlertWindow::showMessageBox(AlertWindow::AlertIconType::WarningIcon,
+			AlertWindow::showMessageBoxAsync(AlertWindow::AlertIconType::WarningIcon,
 			                            "Preset already exists!",
 			                            "The preset you're trying to create already exists, please choose another name "
 			                            "or remove the other one.",
@@ -383,7 +383,7 @@
 
 		File move_target(p_directory + File::getSeparatorString() + p_new_name);
 		if (move_target.isDirectory()) {
-			AlertWindow::showMessageBox(
+			AlertWindow::showMessageBoxAsync(
 			    AlertWindow::AlertIconType::WarningIcon,
 			    "Category already exists!",
 			    "The category you're trying to create already exists, please choose another name "
@@ -418,7 +418,7 @@
 
 		File move_target(p_directory + File::getSeparatorString() + p_new_name);
 		if (move_target.isDirectory()) {
-			AlertWindow::showMessageBox(
+			AlertWindow::showMessageBoxAsync(
 			    AlertWindow::AlertIconType::WarningIcon,
 			    "Soundbank already exists!",
 			    "The soundbank you're trying to create already exists, please choose another name "
@@ -454,7 +454,7 @@
 
 		File move_target(target_absolute);
 		if (move_target.isDirectory()) {
-			AlertWindow::showMessageBox(
+			AlertWindow::showMessageBoxAsync(
 			    AlertWindow::AlertIconType::WarningIcon,
 			    "Category already exists!",
 			    "The category you're trying to create already exists, please choose another name "
@@ -486,7 +486,7 @@
 		                 File::getSeparatorString() + p_file + ".odin");
 
 		if (move_target.existsAsFile()) {
-			AlertWindow::showMessageBox(AlertWindow::AlertIconType::WarningIcon,
+			AlertWindow::showMessageBoxAsync(AlertWindow::AlertIconType::WarningIcon,
 			                            "Preset already exists!",
 			                            "The preset you're trying to create already exists, please choose another name "
 			                            "or remove the other one.",
@@ -513,7 +513,7 @@
 
 		File move_target(target_absolute);
 		if (move_target.isDirectory()) {
-			AlertWindow::showMessageBox(
+			AlertWindow::showMessageBoxAsync(
 			    AlertWindow::AlertIconType::WarningIcon,
 			    "Category already exists!",
 			    "The category you're trying to create already exists, please choose another name "
@@ -544,7 +544,7 @@
 		                 File::getSeparatorString() + p_file + ".odin");
 
 		if (copy_target.existsAsFile()) {
-			AlertWindow::showMessageBox(AlertWindow::AlertIconType::WarningIcon,
+			AlertWindow::showMessageBoxAsync(AlertWindow::AlertIconType::WarningIcon,
 			                            "Preset already exists!",
 			                            "The preset you're trying to create already exists, please choose another name "
 			                            "or remove the other one.",
@@ -660,7 +660,7 @@
 	std::string version_string;
 	if (checkForBiggerVersion(p_file_stream, version_string)) {
 		//abort with icon
-		AlertWindow::showMessageBox(
+		AlertWindow::showMessageBoxAsync(
 		    AlertWindow::AlertIconType::WarningIcon,
 		    "Cannot load patch!",
 		    "The bad news: You cannot load this patch, because you are on version " + ODIN_VERSION_STRING +
@@ -1007,7 +1007,7 @@
 				    File copy_target(copy_target_string);
 
 				    if (copy_target.existsAsFile()) {
-					    AlertWindow::showMessageBox(
+					    AlertWindow::showMessageBoxAsync(
 					        AlertWindow::AlertIconType::WarningIcon,
 					        "Preset already exists!",
 					        "The preset you're trying to import already exists in this category, "
diff -urZ ./Source/gui/PatchBrowserSelector.cpp ../../apps/odin2/Source/gui/PatchBrowserSelector.cpp
--- ./Source/gui/PatchBrowserSelector.cpp	2021-01-13 18:40:10.941861886 +0900
+++ ../../apps/odin2/Source/gui/PatchBrowserSelector.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -118,7 +118,7 @@
 void PatchBrowserSelector::applyInputField() {
 
 	if (m_input_field.getText().isEmpty()) {
-		AlertWindow::showMessageBox(AlertWindow::AlertIconType::WarningIcon,
+		AlertWindow::showMessageBoxAsync(AlertWindow::AlertIconType::WarningIcon,
 		                            "No name provided!",
 		                            "Please enter a name into the text field!",
 		                            "Jeeez, okay...");
@@ -332,18 +332,20 @@
 					unhighlightAllEntries();
 				};
 				m_entries[file_index]->onRightClick = [&, return_string, file_index]() {
-					int selected = m_menu.show();
-
-					if (selected == PATCH_BROWSER_MENU_ENTRY_DELETE) {
-						passDeleteToPatchBrowser(return_string);
-					} else if (selected == PATCH_BROWSER_MENU_ENTRY_RENAME) {
-						m_entries[file_index]->showRenameEditor();
-					} else if (selected >= PATCH_BROWSER_MENU_MOVE_OFFSET &&
-					           selected < PATCH_BROWSER_MENU_COPY_OFFSET) {
-						onMove(m_entries[file_index]->getText(), getMoveFileString(selected));
-					} else if (selected >= PATCH_BROWSER_MENU_COPY_OFFSET) {
-						onCopy(m_entries[file_index]->getText(), getCopyFileString(selected));
-					}
+					PopupMenu::Options options{};
+					std::function<void(int)> cb = [&](int selected) {
+						if (selected == PATCH_BROWSER_MENU_ENTRY_DELETE) {
+							passDeleteToPatchBrowser(return_string);
+						} else if (selected == PATCH_BROWSER_MENU_ENTRY_RENAME) {
+							m_entries[file_index]->showRenameEditor();
+						} else if (selected >= PATCH_BROWSER_MENU_MOVE_OFFSET &&
+								   selected < PATCH_BROWSER_MENU_COPY_OFFSET) {
+							onMove(m_entries[file_index]->getText(), getMoveFileString(selected));
+						} else if (selected >= PATCH_BROWSER_MENU_COPY_OFFSET) {
+							onCopy(m_entries[file_index]->getText(), getCopyFileString(selected));
+						}
+					};
+					m_menu.showMenuAsync(options, cb);
 				};
 				m_entries[file_index]->applyRenaming = [&](String p_old_name, String p_new_name) {
 					applyRenamingSelector(getDirectory(), p_old_name, p_new_name);
diff -urZ ./Source/gui/SaveLoadComponent.cpp ../../apps/odin2/Source/gui/SaveLoadComponent.cpp
--- ./Source/gui/SaveLoadComponent.cpp	2021-01-13 18:40:10.945861828 +0900
+++ ../../apps/odin2/Source/gui/SaveLoadComponent.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -171,12 +171,12 @@
 
 				    //check whether file already exists
 				    if (file_to_write.existsAsFile()) {
-					    if (!(AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+					    if (!(true/*AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 					                                       "File already exists!",
 					                                       "Are you sure you want to overwrite it?",
 					                                       {},
 					                                       {},
-					                                       {}))) {
+					                                       {})*/)) {
 						    //user selected cancel
 						    return;
 					    }
@@ -265,13 +265,13 @@
 
 	m_reset.onClick = [&]() {
 		if (/*m_reset_warning_was_shown ||*/
-		    AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+		    true/*AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 		                                 "Reset Synth",
 		                                 "This will reset the synth to its initial state and you will lose "
 		                                 "your patch!",
 		                                 {},
 		                                 {},
-		                                 {})) {
+		                                 {})*/) {
 
 			// replace stream with patch from binary data
 			MemoryInputStream init_stream(BinaryData::init_patch_odin, BinaryData::init_patch_odinSize, false);
@@ -311,20 +311,23 @@
 					m_patch_dropdown_menu.addItem(file_index + 1,
 					                              file_array[file_index].getFileName().dropLastCharacters(5));
 				}
-				int file_index_chosen = m_patch_dropdown_menu.show();
-
-				if (file_index_chosen != 0) { //means none was selected
-					File file_chosen = file_array[file_index_chosen - 1];
-
-					FileInputStream file_stream(file_chosen);
-					if (file_stream.openedOk()) {
-						loadPatchFromOpenedFileStream(file_stream);
-						m_value_tree.state.getChildWithName("misc").setProperty(
-						    "current_patch_filename", file_chosen.getFileName(), nullptr);
-						DBG("set filename in valuetree: " +
-						    m_value_tree.state.getChildWithName("misc")["current_patch_filename"].toString());
+				std::function<void(int)> cb = [&](int file_index_chosen) {
+					if (file_index_chosen != 0) { //means none was selected
+						File file_chosen = file_array[file_index_chosen - 1];
+
+						FileInputStream file_stream(file_chosen);
+						if (file_stream.openedOk()) {
+							loadPatchFromOpenedFileStream(file_stream);
+							m_value_tree.state.getChildWithName("misc").setProperty(
+									"current_patch_filename", file_chosen.getFileName(), nullptr);
+							DBG("set filename in valuetree: " +
+								m_value_tree.state.getChildWithName(
+										"misc")["current_patch_filename"].toString());
+						}
 					}
-				}
+				};
+				PopupMenu::Options options{};
+				m_patch_dropdown_menu.showMenuAsync(options, cb);
 			} else {
 				//no files in current dir -> open filebrowser
 				loadPatchWithFileBrowser();
@@ -542,7 +545,7 @@
 	std::string version_string;
 	if (checkForBiggerVersion(p_file_stream, version_string)) {
 		//abort with icon
-		AlertWindow::showMessageBox(
+		AlertWindow::showMessageBoxAsync(
 		    AlertWindow::AlertIconType::WarningIcon,
 		    "Cannot load patch!",
 		    "The bad news: You cannot load this patch, because you are on version " + ODIN_VERSION_STRING +
diff -urZ ./Source/gui/SyncTimeSelector.cpp ../../apps/odin2/Source/gui/SyncTimeSelector.cpp
--- ./Source/gui/SyncTimeSelector.cpp	2021-01-13 18:40:10.949861771 +0900
+++ ../../apps/odin2/Source/gui/SyncTimeSelector.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -37,7 +37,8 @@
 	m_dropdown.addItem(120, "1 / 32");
 	m_dropdown.addItem(130, "1 / 32T");
 
-	m_display.onMouseDown = [&]() { setValuesFromDropdown(m_dropdown.show()); };
+	// PopupMenu asyncification not implemented
+	//m_display.onMouseDown = [&]() { setValuesFromDropdown(m_dropdown.show()); };
 
 	m_dropdown.setLookAndFeel(&m_menu_feels);
 
diff -urZ ./Source/gui/WaveformSelectorComponent.cpp ../../apps/odin2/Source/gui/WaveformSelectorComponent.cpp
--- ./Source/gui/WaveformSelectorComponent.cpp	2021-01-13 18:40:10.949861771 +0900
+++ ../../apps/odin2/Source/gui/WaveformSelectorComponent.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -36,7 +36,8 @@
 	m_down.setColour(juce::DrawableButton::ColourIds::backgroundOnColourId, juce::Colour());
 	m_down.onClick = [&]() { increment(); };
 
-	m_display.onMouseDown = [&]() { setValue(m_menu.show()); };
+	// Not implemented on Android
+	//m_display.onMouseDown = [&]() { setValue(m_menu.show()); };
 
 	m_buttons_right = p_buttons_right;
 
diff -urZ ./Source/PluginEditor.cpp ../../apps/odin2/Source/PluginEditor.cpp
--- ./Source/PluginEditor.cpp	2021-01-13 23:20:18.326853908 +0900
+++ ../../apps/odin2/Source/PluginEditor.cpp	2021-01-14 02:06:10.132608067 +0900
@@ -118,13 +118,13 @@
 	m_patch_browser.forceValueTreeLambda = [&]() { forceValueTreeOntoComponents(true); };
 
 	m_reset.onClick = [&]() {
-		if (AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
+		if (true/*AlertWindow::showOkCancelBox(AlertWindow::WarningIcon,
 		                                 "Reset Synth",
 		                                 "This will reset the synth to its initial state and you will lose "
 		                                 "your patch!",
 		                                 {},
 		                                 {},
-		                                 {})) {
+		                                 {})*/) {
 
 			// replace stream with patch from binary data
 			MemoryInputStream init_stream(BinaryData::init_patch_odin, BinaryData::init_patch_odinSize, false);
@@ -187,7 +187,7 @@
 	m_osc1_dropdown.onClick = [&]() {
 		m_osc1_dropdown.setState(Button::ButtonState::buttonNormal);
 		m_osc1_dropdown.setToggleState(false, dontSendNotification);
-		setOsc1Plate(m_osc_dropdown_menu.show());
+		m_osc_dropdown_menu.showMenuAsync(PopupMenu::Options{}, [&](int v) { setOsc1Plate(v); });
 	};
 	addAndMakeVisible(m_osc1_dropdown);
 	m_osc1_dropdown.setTooltip("Select the module to\nbe used for oscillator 1");
@@ -201,7 +201,7 @@
 	m_osc2_dropdown.onClick = [&]() {
 		m_osc2_dropdown.setState(Button::ButtonState::buttonNormal);
 		m_osc2_dropdown.setToggleState(false, dontSendNotification);
-		setOsc2Plate(m_osc_dropdown_menu.show());
+		m_osc_dropdown_menu.showMenuAsync(PopupMenu::Options{}, [&](int v) { setOsc2Plate(v); });
 	};
 	m_osc2_dropdown.setTooltip("Select the module to\nbe used for oscillator 2");
 	addAndMakeVisible(m_osc2_dropdown);
@@ -215,7 +215,7 @@
 	m_osc3_dropdown.onClick = [&]() {
 		m_osc3_dropdown.setState(Button::ButtonState::buttonNormal);
 		m_osc3_dropdown.setToggleState(false, dontSendNotification);
-		setOsc3Plate(m_osc_dropdown_menu.show());
+		m_osc_dropdown_menu.showMenuAsync(PopupMenu::Options{}, [&](int v) {setOsc3Plate(v);});
 	};
 	m_osc3_dropdown.setTooltip("Select the module to\nbe used for oscillator 3");
 	addAndMakeVisible(m_osc3_dropdown);
@@ -229,7 +229,7 @@
 	m_filter1_dropdown.onClick = [&]() {
 		m_filter1_dropdown.setState(Button::ButtonState::buttonNormal);
 		m_filter1_dropdown.setToggleState(false, dontSendNotification);
-		setFilter1Plate(m_filter_dropdown_menu.show());
+		m_filter_dropdown_menu.showMenuAsync(PopupMenu::Options{}, [&](int v) { setFilter1Plate(v); });
 	};
 	m_filter1_dropdown.setTooltip("Select the module to\nbe used for filter 1");
 	addAndMakeVisible(m_filter1_dropdown);
@@ -243,7 +243,7 @@
 	m_filter2_dropdown.onClick = [&]() {
 		m_filter2_dropdown.setState(Button::ButtonState::buttonNormal);
 		m_filter2_dropdown.setToggleState(false, dontSendNotification);
-		setFilter2Plate(m_filter_dropdown_menu.show());
+		m_filter_dropdown_menu.showMenuAsync(PopupMenu::Options{}, [&](int v) {setFilter2Plate(v);});
 	};
 	m_filter2_dropdown.setTooltip("Select the module to\nbe used for filter 2");
 	addAndMakeVisible(m_filter2_dropdown);
@@ -257,7 +257,7 @@
 	m_filter3_dropdown.onClick = [&]() {
 		m_filter3_dropdown.setState(Button::ButtonState::buttonNormal);
 		m_filter3_dropdown.setToggleState(false, dontSendNotification);
-		setFilter3Plate(m_filter_dropdown_menu.show());
+		m_filter_dropdown_menu.showMenuAsync(PopupMenu::Options{}, [&](int v) { setFilter3Plate(v); } );
 	};
 	m_filter3_dropdown.setTooltip("Select the module to\nbe used for filter 3");
 	addAndMakeVisible(m_filter3_dropdown);
diff -urZ ./Source/PluginProcessor.cpp ../../apps/odin2/Source/PluginProcessor.cpp
--- ./Source/PluginProcessor.cpp	2021-01-13 23:20:18.330854004 +0900
+++ ../../apps/odin2/Source/PluginProcessor.cpp	2021-01-14 02:39:31.577172830 +0900
@@ -339,7 +339,7 @@
 void OdinAudioProcessor::processBlock(AudioBuffer<float> &buffer, MidiBuffer &midiMessages) {
 
 	//avoid denormals
-	denormals::ScopedNoDenormals snd;
+	//denormals::ScopedNoDenormals snd;
 
 	// get BPM info from host
 	if (AudioPlayHead *playhead = getPlayHead()) {
@@ -855,7 +855,7 @@
 			int patch_migration_version_read =
 			    xmlState->getChildByName("misc")->getIntAttribute("patch_migration_version");
 			if (patch_migration_version_read > ODIN_PATCH_MIGRATION_VERSION) {
-				AlertWindow::showMessageBox(
+				AlertWindow::showMessageBoxAsync(
 				    AlertWindow::AlertIconType::WarningIcon,
 				    "You are trying to load a project which was saved with a newer Version of Odin2. Please go to "
 				    "www.thewavewarden.com and download the newest version to properly use this project!",
diff -urZ ./Source/ScopedNoDenormals.h ../../apps/odin2/Source/ScopedNoDenormals.h
--- ./Source/ScopedNoDenormals.h	2021-01-13 18:40:10.209872458 +0900
+++ ../../apps/odin2/Source/ScopedNoDenormals.h	2021-01-14 02:39:31.633174244 +0900
@@ -13,6 +13,8 @@
 ** GNU General Public License for more details.
 */
 
+#if false
+
 #include "xmmintrin.h"
 
 namespace denormals {
@@ -34,3 +36,5 @@
 	int oldMXCSR;
 };
 } // namespace denormals
\ No newline at end of file
+
+#endif
Only in ../../apps/odin2: .stamp
